/*
 * WFSFormTester.java
 *
 * Created on 25. Juli 2006, 17:38
 */

package de.cismet.cismap.commons.wfsforms;

import com.jgoodies.looks.plastic.PlasticXPLookAndFeel;
import de.cismet.tools.gui.log4jquickconfig.Log4JQuickConfig;
import java.awt.BorderLayout;
import java.awt.Dimension;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.util.ResourceBundle;
import java.util.Vector;
import javax.swing.JComboBox;
import javax.swing.JComponent;
import javax.swing.JFrame;
import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;

/**
 *
 * @author  thorsten.hell@cismet.de
 */
public class WFSFormTester extends AbstractWFSForm {
    private static final ResourceBundle I18N = ResourceBundle.getBundle("de/cismet/cismap/commons/GuiBundle");
    private final org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(this.getClass());
    
    private WFSFormFeature strasse=null;
    private WFSFormFeature nr=null;
    
    /** Creates new form WFSFormTester */
    public WFSFormTester() {
        log.debug("new WFSFormTester");
        initComponents();
        AutoCompleteDecorator.decorate(cboStreets);
        AutoCompleteDecorator.decorate(cboNr);
        prbStreets.setPreferredSize(new Dimension(10,5));
        prbNr.setPreferredSize(new Dimension(10,5));
        listComponents.put("cboAllStreets",cboStreets);
        listComponents.put("cboAllStreetsProgress",prbStreets);
        listComponents.put("cboNumbersOfAStreet",cboNr);
        listComponents.put("cboNumbersOfAStreetProgress",prbNr);
        
        
    }
    
    
    public void garbageDuringAutoCompletion(JComboBox box){
     
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        cboStreets = new javax.swing.JComboBox();
        cboNr = new javax.swing.JComboBox();
        cmdOk = new javax.swing.JButton();
        prbStreets = new javax.swing.JProgressBar();
        prbNr = new javax.swing.JProgressBar();

        cboStreets.setEnabled(false);
        cboStreets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboStreetsActionPerformed(evt);
            }
        });
        cboStreets.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                cboStreetsKeyTyped(evt);
            }
        });

        cboNr.setEnabled(false);
        cboNr.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cboNrActionPerformed(evt);
            }
        });

        cmdOk.setText(I18N.getString("de.cismet.cismap.commons.wfsforms.WFSFormTester.cmdOk.text")); // NOI18N

        prbStreets.setBorderPainted(false);

        prbNr.setBorderPainted(false);

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING, false)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, prbStreets, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .add(org.jdesktop.layout.GroupLayout.LEADING, cboStreets, 0, 236, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING, false)
                    .add(prbNr, 0, 0, Short.MAX_VALUE)
                    .add(cboNr, 0, 60, Short.MAX_VALUE))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(cmdOk)
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        layout.linkSize(new java.awt.Component[] {cboStreets, prbStreets}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.linkSize(new java.awt.Component[] {cboNr, prbNr}, org.jdesktop.layout.GroupLayout.HORIZONTAL);

        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.BASELINE)
                    .add(cboStreets, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cboNr, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(cmdOk))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.TRAILING)
                    .add(prbStreets, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(prbNr, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void cboNrActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboNrActionPerformed
// TODO add your handling code here:
    }//GEN-LAST:event_cboNrActionPerformed

    private void cboStreetsKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cboStreetsKeyTyped
        if (cboNr.getSelectedItem() instanceof WFSFormFeature) {
            nr=(WFSFormFeature)cboNr.getSelectedItem();
        }
        else {
            nr=null;
        }
    }//GEN-LAST:event_cboStreetsKeyTyped

    private void cboStreetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cboStreetsActionPerformed
//        log.debug(!cboStreets.isPopupVisible());
//        String s="";
//        if (cboStreets.getSelectedItem()!=null)  {
//            s=cboStreets.getSelectedItem().getClass().toString();
//        }
//        log.debug(cboStreets.getSelectedItem()+":::"+s);
        if (cboStreets.getSelectedItem() instanceof WFSFormFeature) {
            strasse=(WFSFormFeature)cboStreets.getSelectedItem();
            requestRefresh("cboNumbersOfAStreet",(WFSFormFeature)cboStreets.getSelectedItem());
        }
        
    }//GEN-LAST:event_cboStreetsActionPerformed
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cboNr;
    private javax.swing.JComboBox cboStreets;
    private javax.swing.JButton cmdOk;
    private javax.swing.JProgressBar prbNr;
    private javax.swing.JProgressBar prbStreets;
    // End of variables declaration//GEN-END:variables
    
    
    public static void main(String[] args) throws Exception{
        
        try {
            //javax.swing.UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName()) ;
            //javax.swing.UIManager.setLookAndFeel(new Plastic3DLookAndFeel());
            //javax.swing.UIManager.setLookAndFeel(new PlasticLookAndFeel());
            javax.swing.UIManager.setLookAndFeel(new PlasticXPLookAndFeel());
            //javax.swing.UIManager.setLookAndFeel(new com.sun.java.swing.plaf.windows.WindowsLookAndFeel());
            // UIManager.setLookAndFeel(new PlasticLookAndFeel());
            //javax.swing.UIManager.setLookAndFeel(new PlasticXPLookAndFeel());
        } catch (Exception e) {
            e.printStackTrace();
        }
        WFSFormQuery allStreets=new WFSFormQuery();
        allStreets.setComponentName("cboAllStreets");
        allStreets.setServerUrl("http://s103bdc-a1/deegreewfs/wfs");
        allStreets.setDisplayTextProperty("geographicIdentifier");
        allStreets.setExtentProperty("geographicExtent");
        allStreets.setFilename("/request_all_streets.xml");
        allStreets.setId("all_streets");
        allStreets.setIdProperty("identifier");
        allStreets.setTitle("Strassen");
        allStreets.setType(WFSFormQuery.INITIAL);
        allStreets.setWfsQueryString(readFileAsString(new File("C:\\request_alle_strassen_extent.xml")));
        
        WFSFormQuery numbers=new WFSFormQuery();
        numbers.setComponentName("cboNumbersOfAStreet");
        numbers.setServerUrl("http://s103bdc-a1/deegreewfs/wfs");
        numbers.setDisplayTextProperty("geographicIdentifier");
        numbers.setExtentProperty("geographicExtent");
        numbers.setFilename("/request_all_numbers.xml");
        numbers.setId("numbers");
        numbers.setIdProperty("identifier");
        numbers.setTitle("Nr");
        numbers.setType(WFSFormQuery.FOLLOWUP);
        numbers.setQueryPlaceholder("@@strasse_id@@");
        numbers.setWfsQueryString(readFileAsString(new File("C:\\request_hausnummern_from_strasse_extent.xml")));
        Vector<WFSFormQuery> v=new Vector<WFSFormQuery>();
        v.add(allStreets);
        v.add(numbers);
        
        final  WFSFormTester tester=new WFSFormTester();
        tester.setQueries(v);
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JFrame f=new JFrame();
                f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
                f.getContentPane().setLayout(new BorderLayout());
                f.getContentPane().add(tester,BorderLayout.CENTER);
                f.setVisible(true);
                f.pack();
            }
        });
        tester.initWFSForm();
    }
    
    public JComponent getListComponentByName(String name) {
        return listComponents.get(name);
    }
    
    private static String readFileAsString(File file) throws java.io.IOException{
        Log4JQuickConfig.configure4LumbermillOnLocalhost();
        StringBuffer fileData = new StringBuffer(1000);
        BufferedReader reader = new BufferedReader(
                new FileReader(file));
        char[] buf = new char[1024];
        int numRead=0;
        while((numRead=reader.read(buf)) != -1){
            String readData = String.valueOf(buf, 0, numRead);
            fileData.append(readData);
            buf = new char[1024];
        }
        reader.close();
        return fileData.toString();
    }
}

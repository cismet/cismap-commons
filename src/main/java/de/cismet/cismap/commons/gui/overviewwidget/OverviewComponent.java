/*
 * OverviewComponent.java
 *
 * Created on 5. Maerz 2008, 21:33
 */
package de.cismet.cismap.commons.gui.overviewwidget;

import com.vividsolutions.jts.geom.Coordinate;
import de.cismet.cismap.commons.BoundingBox;
import de.cismet.cismap.commons.Crs;
import de.cismet.cismap.commons.CrsTransformer;
import de.cismet.cismap.commons.RetrievalServiceLayer;
import de.cismet.cismap.commons.XBoundingBox;
import de.cismet.cismap.commons.gui.MappingComponent;
import de.cismet.cismap.commons.gui.layerwidget.ActiveLayerModel;
import de.cismet.cismap.commons.interaction.CismapBroker;
import de.cismet.cismap.commons.raster.wms.simple.SimpleWMS;
import de.cismet.cismap.commons.raster.wms.simple.SimpleWmsGetMapUrl;
import de.cismet.cismap.commons.retrieval.RetrievalEvent;
import de.cismet.cismap.commons.retrieval.RetrievalListener;
import de.cismet.tools.configuration.Configurable;
import de.cismet.tools.configuration.NoWriteError;
import de.cismet.tools.gui.log4jquickconfig.Log4JQuickConfig;
import edu.umd.cs.piccolo.PCamera;
import java.awt.BorderLayout;
import java.awt.Color;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import javax.swing.JFrame;
import org.deegree.model.crs.GeoTransformer;
import org.jdom.Element;

/**
 *
 * @author  hell
 */
public class OverviewComponent extends javax.swing.JPanel implements Configurable {
    private final org.apache.log4j.Logger log = org.apache.log4j.Logger.getLogger(this.getClass());
    MappingComponent overviewMap = null;
    MappingComponent masterMap = null;
    ActiveLayerModel model = new ActiveLayerModel();
    private String url = "http://geoportal.wuppertal.de/deegree/wms?&VERSION=1.1.1&REQUEST=GetMap&WIDTH=<cismap:width>&HEIGHT=<cismap:height>&BBOX=<cismap:boundingBox>&SRS=EPSG:31466&FORMAT=image/png&TRANSPARENT=true&BGCOLOR=0xF0F0F0&EXCEPTIONS=application/vnd.ogc.se_xml&LAYERS=R102:stadtplan2007&STYLES=default";//NOI18N
    SimpleWMS backgroundService = new SimpleWMS(new SimpleWmsGetMapUrl(url));
    Crs srs = new Crs("EPSG:31466", "EPSG:31466", "EPSG:31466", true, true);//NOI18N
    BoundingBox home = new BoundingBox(2567799, 5670041, 2594650, 5688258);

    /** Creates new form OverviewComponent */
    public OverviewComponent() {
        initComponents();
        overviewMap = new MappingComponent();
        add(overviewMap, BorderLayout.CENTER);
        overviewMap.setInteractionMode(MappingComponent.OVERVIEW);
        overviewMap.setReadOnly(true);
        XBoundingBox extent = new XBoundingBox(home.getX1(), home.getY1(), home.getX2(), home.getY2(), srs.getCode(), true);
        overviewMap.setFixedBoundingBox(extent);
        model.setSrs(srs);
        model.addHome(extent);
        overviewMap.setMappingModel(model);
        revalidate();
    }

    public void initBackgroundService() {
        log.debug("initBackgroundService");//NOI18N
        model = new ActiveLayerModel();

        XBoundingBox extent = new XBoundingBox(home.getX1(), home.getY1(), home.getX2(), home.getY2(), srs.getCode(), true);
        overviewMap.setFixedBoundingBox(extent);
        model.setSrs(srs);
        model.setDefaultSrs(srs);
        model.addHome(extent);
        overviewMap.setMappingModel(model);
        model.removeAllLayers();
        model.addLayer((RetrievalServiceLayer) backgroundService);
        backgroundService.addRetrievalListener(new RetrievalListener() {
            public void retrievalStarted(RetrievalEvent e) {}
            public void retrievalProgress(RetrievalEvent e) {}
            public void retrievalComplete(RetrievalEvent e) {}
            public void retrievalAborted(RetrievalEvent e) {}
            public void retrievalError(RetrievalEvent e) {}
        });
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents
    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
    
    public static void main(String[] args) {
        Log4JQuickConfig.configure4LumbermillOnLocalhost();
        JFrame f = new JFrame();
        f.setSize(500, 500);
        f.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        OverviewComponent ov = new OverviewComponent();
        f.getContentPane().add(ov);
        f.setVisible(true);
        ov.overviewMap.unlock();
    }

    public MappingComponent getOverviewMap() {
        return overviewMap;
    }

    public void setOverviewMap(MappingComponent overviewMap) {
        this.overviewMap = overviewMap;
    }

    public MappingComponent getMasterMap() {
        return masterMap;
    }

    public void setMasterMap(final MappingComponent masterMap) {
        this.masterMap = masterMap;
        final Color fill = new Color(255, 0, 0, 100);
        masterMap.getCamera().addPropertyChangeListener(PCamera.PROPERTY_VIEW_TRANSFORM, new PropertyChangeListener() {
            public void propertyChange(PropertyChangeEvent evt) {
                try {
                    BoundingBox bb = masterMap.getCurrentBoundingBox();

                    if (!CismapBroker.getInstance().getSrs().getCode().equals(srs.getCode())) {
                        CrsTransformer transformer = new CrsTransformer(srs.getCode());
                        bb = transformer.transformBoundingBox(bb, CismapBroker.getInstance().getSrs().getCode());
                    }

                    double x = bb.getX1() + bb.getWidth() / 2.0;
                    double y = bb.getY2() - bb.getHeight() / 2.0;
                    overviewMap.outlineArea(bb, fill);
                    //overviewMap.crossHairPoint(new Coordinate(2583781, 5682540));
                    overviewMap.crossHairPoint(new Coordinate(x, y));
                } catch (Exception e) {
                    log.error("Cannot transform the current boundingbox from " + 
                            CismapBroker.getInstance().getSrs().getCode() + " to " + srs.getCode(), e);
                }
            }
        });
    }

    public void configure(Element parent) {
        
    }

    public Element getConfiguration() throws NoWriteError {
        return null;
    }

    public void masterConfigure(Element parent) {
        try {
            Element prefs = parent.getChild("cismapOverviewComponentPreferences");//NOI18N
            try {
                // the following crs object is incomplete and should only be used within the OverviewComponent
                Crs tmp = new Crs();
                tmp.setCode(prefs.getAttributeValue("srs"));
                srs = tmp;
            } catch (Exception skip) {}
            
            try {
                home = new BoundingBox(prefs.getChild("overviewExtent"));//NOI18N
            } catch (Exception skip) {}

            try {
                SimpleWMS simpleWMS = new SimpleWMS(prefs.getChild("background").getChild("simpleWms"));//NOI18N
                backgroundService = simpleWMS;
            } catch (Exception skip) {}
            initBackgroundService();
        } catch (Exception e) {
            log.warn("Fehler beim Konfigurieren der OverviewComponent. Fallback=Stadtplan", e);//NOI18N
            initBackgroundService();
        }
    }
}

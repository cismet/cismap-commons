BoundingBoxFromTextConverter.getFormatDisplayName().returnValue=Rechteck aus 2 Koordinaten
BoundingBoxFromTextConverter.getFormatDescription().returnValue=- Erzeugt eine rechteckige Polygon-Geometrie\\n- Ben\u00f6tigt zwei Koordinaten\\n- \u00dcberz\u00e4hlige Koordinate werden ignoriert\\n- Setzt erste Koordinate = linke-untere Ecke voraus\\n- Setzt zweite Koordinate = rechte-obere Ecke voraus
BoundingBoxFromTextConverter.getFormatHtmlDescription().returnValue=<html>- Erzeugt eine rechteckige Polygon-Geometrie<br/>- Ben\u00f6tigt zwei Koordinaten<br/>- \u00dcberz\u00e4hlige Koordinate werden ignoriert<br/>- Setzt erste Koordinate = linke-untere Ecke voraus<br/>- Setzt zweite Koordinate = rechte-obere Ecke voraus</html>
BoundingBoxFromTextConverter.getFormatExample().returnValue=<html>2581629{0}99 5683116<br/>2581706{0}999 5683180{0}99</html>
GeomFromWkbAsHexTextConverter.getFormatDisplayName().returnValue=Geometrie aus (E)WKB-Format
GeomFromWkbAsHexTextConverter.getFormatDescription().returnValue=- Erzeugt eine Geometrie aus (E)WKB\\n- Setzt WKB Format als Hex-Text voraus\\n- Unterst\u00fctzt PostGIS EWKB Format\\n- Benutzt SRID des EWKB anstelle des ausgew\u00e4hlten, wenn Daten EWKB sind
GeomFromWkbAsHexTextConverter.getFormatHtmlDescription().returnValue=<html>- Erzeugt eine Geometrie aus (E)WKB<br/>- Setzt WKB Format als Hex-Text voraus<br/>- Unterst\u00fctzt PostGIS EWKB Format<br/>- Benutzt SRID des EWKB anstelle des ausgew\u00e4hlten, wenn Daten EWKB sind</html>
GeomFromWkbAsHexTextConverter.getFormatExample().returnValue=<html>0101000020cd0b000014ae47e17a14f23f0000000000000040</html>
GeomFromWktConverter.getFormatDisplayName().returnValue=Geometrie aus (E)WKT-Format
GeomFromWktConverter.getFormatDescription().returnValue=- Erzeugt eine Geometrie aus (E)WKT\\n- Setzt WKT Format voraus\\n- Unterst\u00fctzt PostGIS EWKT Format\\n- Benutzt SRID des EWKT anstelle des ausgew\u00e4hlten, wenn Daten EWKT sind
GeomFromWktConverter.getFormatHtmlDescription().returnValue=<html>- Erzeugt eine Geometrie aus (E)WKT<br/>- Setzt WKT Format voraus<br/>- Unterst\u00fctzt PostGIS EWKT Format<br/>- Benutzt SRID des EWKT anstelle des ausgew\u00e4hlten, wenn Daten EWKT sind</html>
GeomFromWktConverter.getFormatExample().returnValue=<html>SRID=4269;POINT(-71.064544 42.28787)</html>
PointFromTextConverter.getFormatDisplayName().returnValue=Punkt aus einer Koordinate
PointFromTextConverter.getFormatDescription().returnValue=- Erzeugt eine Punkt-Geometrie\\n- Ben\u00f6tigt eine Koordinate\\n- \u00dcberz\u00e4hlige Koordinate werden ignoriert
PointFromTextConverter.getFormatHtmlDescription().returnValue=<html>- Erzeugt eine Punkt-Geometrie<br/>- Ben\u00f6tigt eine Koordinate<br/>- \u00dcberz\u00e4hlige Koordinate werden ignoriert</html>
PointFromTextConverter.getFormatExample().returnValue=<html>2581629{0}99 5683116</html>
PolygonFromTextConverter.getFormatDisplayName().returnValue=Fl\u00e4che aus min. 3 Koordinaten
PolygonFromTextConverter.getFormatDescription().returnValue=- Erzeugt eine Polygon-Geometrie\\n- Ben\u00f6tigt mindestens drei Koordinaten\\n- F\u00fcgt schlie\u00dfende Koordinate hinzu, wenn letzte Koordinate nicht der ersten entspricht
PolygonFromTextConverter.getFormatHtmlDescription().returnValue=<html>- Erzeugt eine Polygon-Geometrie<br/>- Ben\u00f6tigt mindestens drei Koordinaten<br/>- F\u00fcgt schlie\u00dfende Koordinate hinzu, wenn letzte Koordinate nicht der ersten entspricht</html>
PolygonFromTextConverter.getFormatExample().returnValue=<html>2581629{0}99 5683116<br/>2581706{0}999 5683180{0}99<br/>2581780{0}9 5683220{0}99<br/>2581852 5683282{0}9<br/>2581629{0}99 5683116</html>
PolylineFromTextConverter.getFormatDisplayName().returnValue=Linienzug aus min. 2 Koordinaten
PolylineFromTextConverter.getFormatDescription().returnValue=- Erzeugt eine Linestring-Geometrie\\n- Ben\u00f6tigt mindestens zwei Koordinaten
PolylineFromTextConverter.getFormatHtmlDescription().returnValue=<html>- Erzeugt eine Linestring-Geometrie<br/>- Ben\u00f6tigt mindestens zwei Koordinaten</html>
PolylineFromTextConverter.getFormatExample().returnValue=<html>2581629{0}99 5683116<br/>2581706{0}999 5683180{0}99<br/>2581780{0}9 5683220{0}99<br/>2581852 5683282{0}9<br/>2581793{0}0 5683366{0}7</html>
AbstractGeometryFromTextConverter.getFormatDescription().returnValue=- Setzt 'Rechtswert&lt;sep&gt;Hochwert&lt;sep&gt;Rechtswert&lt;sep&gt;...' Schema voraus\\n- &lt;sep&gt; darf Trennzeichen (Leerzeichen, Tabulator, Enter, etc.), {0} sein\\n- Zahlen werden mit ''{1}'' als Dezimaltrenner interpretiert
AbstractGeometryFromTextConverter.getFormatHtmlDescription().returnValue=<html>- Setzt 'Rechtswert&lt;sep&gt;Hochwert&lt;sep&gt;Rechtswert&lt;sep&gt;...' Schema voraus<br/>- &lt;sep&gt; darf Trennzeichen (Leerzeichen, Tabulator, Enter, etc.), {0} sein<br/>- Zahlen werden mit ''{1}'' als Dezimaltrenner interpretiert</html>
AbstractGeometryFromTextConverter.getFormatSeparators().or=\ oder
